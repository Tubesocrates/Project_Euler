# Each new term in the Fibonacci sequence is generated by adding the previous two terms. By starting with 1 and 2, the first 10 terms will be:

# 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...

# By considering the terms in the Fibonacci sequence whose values do not exceed four million, find the sum of the even-valued terms.


#variables
fib_start = [1, 2]
fib_e = [2]
tot_sum = 0
even_sum = 0
i = 1

# find fibinachi sequence
def build_fib(list, dest, limit):
    i = list[-2]
    i2 = list[-1]
    new_i = 0
    while new_i <= limit:
        new_i = i + i2
        i = i2
        i2 = new_i
        list.append(new_i)
        if new_i %2 == 0:
            dest.append(new_i)
    print("fib =", list)
    print("fib_e =", dest)
    return fib_e

even_fibs = build_fib(fib_start, fib_e, 4000000)

#find sum
sum = 0
for j in even_fibs:
    sum += j

print("Sum even Fibs =", sum)

